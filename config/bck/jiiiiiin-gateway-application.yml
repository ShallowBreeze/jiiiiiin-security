server:
  port: 8861
spring:
  application:
    name: jiiiiiin-gateway
eureka:
  client:
    service-url:
#    完成eureka的注册
#    测试8000作为单机版的eureka是无法注册的
#      defaultZone: http://server1:8000/eureka/
      defaultZone: http://127.0.0.1:8761/eureka/
    # TODO
    register-with-eureka: false

ribbon:
  ConnectTimeout: 10000
  ReadTimeout: 30000

# 参考：http://blog.didispace.com/springcloud5/
zuul:
  # 上下文
  prefix: /api
  # 配置路由信息
  routes:
    # 微服务的自定义名称
    manager-server:
      # 当前微服务的匹配前缀，对应微服务的`context-path`，进行url匹配
      path: /mng/**
      # 微服务对应`application.name`
      # 去eureka server获取对应的注册信息发起负载均衡器调用
#      serviceId: manager-server
      # 直接通过地址调用
      url: http://localhost:9090
      # 不过滤上下文，这里指的是对应微服务的对应微服务的`context-path`，如果微服务本身配置了`context-path`这里需要设置为false
      strip-prefix: false
      # 放开对于敏感头的过滤（支持cookie传递）
      sensitiveHeaders:
    jiiiiiin-product:
      path: /product/**
      serviceId: jiiiiiin-product
      strip-prefix: false
    jiiiiiin-order:
      path: /order/**
      serviceId: jiiiiiin-order
      strip-prefix: false
  # 用来设置不希望被API网关进行路由的URL表达式
  ignored-patterns: /**/product/**
#  ignored-patterns:
#    - /product/**
# 测试打开，方便查看zuul提供的api
management:
  security:
    enabled: false


logging:
  level:
    org.springframework.cloud.netflix.zuul: info