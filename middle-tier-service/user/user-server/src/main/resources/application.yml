#查看springboot开启了哪些配置
debug: false

# TODO 待整合Apollo

# 通过apollo配置
server:
  port: 9999
  servlet:
    session:
      timeout: 60
eureka:
  client:
    service-url:
      # 指定服务注册中心的地址
      defaultZone: http://jiiiiiin-eureka:8761/eureka/
logging:
  level:
    # 配置日志输出级别以观察SQL的执行情况
    com:
      springboot:
        mapper: debug
    org:
      springframework:
        security: debug
spring:
  application:
    name: user-server
  oauth2:
    resource:
      # https://my.oschina.net/buwei/blog/910028
      filter-order: 3
  #  application:
  #    # 指定发布的微服务名（以后调用时，只需该名称即可访问该服务）
  #    name: jiiiiiin-server-manager
  #  profiles:
  #    active: dev
  jackson:
    default-property-inclusion: non_null
  thymeleaf:
    cache: false
    # 避免Thymeleaf对html语法检查过严 https://www.jianshu.com/p/b361a6acbe0cz
    mode: LEGACYHTML5
    encoding: UTF-8
    prefix: classpath:/templates/
  # https://docs.spring.io/spring-session/docs/current/reference/html5/guides/boot-redis.html
  session:
    store-type: redis
  redis:
    host: jiiiiiin-redis
    port: 6379
    database: 0
    lettuce:
      pool:
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
      # 连接超时时间（毫秒）
      timeout: 0
    password:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://jiiiiiin-mysql:3306/vplusdb?&useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false
    username: vplus
    password: 1qaz@WSX
    # 参考：https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
    druid:
      # 数据库访问配置, 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      # 连接池配置
      initial-size: 2
      min-idle: 2
      max-active: 5
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: cn.jiiiiiin.module.*.service.*
      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台
        login-username: druid
        login-password: druid123
        # IP白名单
        allow: 127.0.0.1,192.168.1.185
        #　IP黑名单（共同存在时，deny优先于allow）
        # deny: 192.168.1.218

      # 配置StatFilter
      filter:
        stat:
          log-slow-sql: true
  boot:
    admin:
      client:
        url: http://jiiiiiin-springboot-admin:5000
mybatis-plus:
  #Mapper.xml所在的位置
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.jiiiiiin.user.entity
  type-aliases-super-type: cn.jiiiiiin.data.entity.BaseEntity
  # TODO 目前mp+不支持多包配置，故需要把当前模块依赖的枚举都放在一个包下
  type-enums-package: cn.jiiiiiin.user.enums
  global-config:
    db-config:
      id-type: id_worker
    #刷新mapper 调试神器
    refresh: true
    sql-parser-cache: false
  executor-type: reuse
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    #开启MyBatis的二级缓存
    cache-enabled: true
# 自定义配置
jiiiiiin:
  security:
    oauth2:
      tokenStore:
        jwt
        # redis
      clients:
        - clientId: pweb
          clientSecret: pweb
    # https://github.com/jojozhai/security
    social:
      filterProcessesUrl: /qqLogin
      qq:
        app-id: 100550231
        app-secret: 69b6ab57b22f3c2fe6a6149274e3295e
        # 覆盖默认的`/auth`用于测试
        # 覆盖默认的`/qq`用于测试
        providerId: callback.do
      weixin:
        app-id: wxd99431bbff8305a0
        app-secret: 60f78681d063590a469f1b297feff3c4
        providerId: weixin
    validate:
      image-code:
        type: EASYCAPTCHA_GIF_TYPE_NUM_AND_UPPER
        width: 70
        length: 2
        interceptor-urls: ${server.context-path}/authentication/form,${server.context-path}/authentication/mobile
    browser:
      fontUrl: http://manager-server:9000/
      signInUrl: /signIn
      sign-up-url: /signUp
      sign-out-url: /signOut
      # 以下设置非必须
      rememberMeSeconds: 3600
      proxy-uri: http://www.pinzhi365.com

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

